{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { UserServiceService } from 'app/services/user-service.service';\nimport { ToastrService } from 'ngx-toastr'; // Import if using Toastr for notifications\n\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/services/user-service.service\";\nimport * as i3 from \"ngx-toastr\";\nexport let UserComponent = /*#__PURE__*/(() => {\n  class UserComponent {\n    constructor(fb, userService, toastr) {\n      this.fb = fb;\n      this.userService = userService;\n      this.toastr = toastr;\n      this.profileForm = this.fb.group({\n        username: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        address: [''],\n        aboutMe: ['']\n      });\n    }\n\n    ngOnInit() {\n      this.getLoggedInUserProfile();\n    } // Fetch currently logged-in user's profile data\n\n\n    getLoggedInUserProfile() {\n      this.userService.getLoggedInUser().subscribe(response => {\n        this.loggedInUser = response.user; // Ensure response structure matches\n\n        this.populateForm();\n      }, error => {\n        console.error('Error fetching user data:', error); // Handle errors (display message, redirect, etc.)\n      });\n    } // Populate form with logged-in user's data\n\n\n    populateForm() {\n      this.profileForm.patchValue({\n        username: this.loggedInUser.username,\n        firstName: this.loggedInUser.firstName,\n        lastName: this.loggedInUser.lastName,\n        email: this.loggedInUser.email,\n        address: this.loggedInUser.address || '',\n        aboutMe: this.loggedInUser.aboutMe || ''\n      });\n    } // Update user profile\n\n\n    updateProfile() {\n      if (this.profileForm.valid) {\n        const updatedData = this.profileForm.value;\n        this.userService.updateUserById(this.loggedInUser._id, updatedData).subscribe(response => {\n          this.toastr.success('Profile updated successfully'); // Optionally update user data in view if necessary\n        }, error => {\n          console.error('Error updating user data:', error);\n          this.toastr.error('Failed to update profile'); // Handle errors (display message, redirect, etc.)\n        });\n      } else {\n        this.toastr.warning('Please fill all required fields');\n      }\n    }\n\n  }\n\n  UserComponent.ɵfac = function UserComponent_Factory(t) {\n    return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserServiceService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n\n  UserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserComponent,\n    selectors: [[\"user-cmp\"]],\n    decls: 63,\n    vars: 0,\n    consts: [[1, \"row\"], [1, \"col-md-4\"], [1, \"card\", \"card-user\"], [1, \"image\"], [\"src\", \"assets/img/damir-bosnjak.jpg\", \"alt\", \"...\"], [1, \"card-body\"], [1, \"author\"], [\"href\", \"#\"], [\"src\", \"assets/img/mike.jpg\", \"alt\", \"...\", 1, \"avatar\", \"border-gray\"], [1, \"title\"], [1, \"description\"], [1, \"card-footer\"], [1, \"button-container\"], [1, \"col-md-8\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"col-md-6\", \"px-1\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"value\", \"michael23\", 1, \"form-control\"], [1, \"col-md-6\", \"pl-1\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [1, \"col-md-6\", \"pr-1\"], [\"type\", \"text\", \"placeholder\", \"Company\", \"value\", \"Chet\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Last Name\", \"value\", \"Faker\", 1, \"form-control\"], [1, \"col-md-12\"], [\"type\", \"text\", \"placeholder\", \"Home Address\", \"value\", \"Melbourne, Australia\", 1, \"form-control\"], [1, \"form-control\", \"textarea\"], [1, \"update\", \"ml-auto\", \"mr-auto\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-round\"]],\n    template: function UserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"a\", 7);\n        i0.ɵɵelement(8, \"img\", 8);\n        i0.ɵɵelementStart(9, \"h5\", 9);\n        i0.ɵɵtext(10, \"Chet Faker\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"p\", 10);\n        i0.ɵɵtext(12, \" @chetfaker \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 11);\n        i0.ɵɵelement(14, \"hr\");\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵelement(16, \"div\", 0);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(17, \"div\", 13)(18, \"div\", 2)(19, \"div\", 14)(20, \"h5\", 15);\n        i0.ɵɵtext(21, \"Edit Profile\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 5)(23, \"form\")(24, \"div\", 0)(25, \"div\", 16)(26, \"div\", 17)(27, \"label\");\n        i0.ɵɵtext(28, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 18);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 19)(31, \"div\", 17)(32, \"label\", 20);\n        i0.ɵɵtext(33, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 0)(36, \"div\", 22)(37, \"div\", 17)(38, \"label\");\n        i0.ɵɵtext(39, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 23);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(41, \"div\", 19)(42, \"div\", 17)(43, \"label\");\n        i0.ɵɵtext(44, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"input\", 24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(46, \"div\", 0)(47, \"div\", 25)(48, \"div\", 17)(49, \"label\");\n        i0.ɵɵtext(50, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(51, \"input\", 26);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(52, \"div\", 0)(53, \"div\", 25)(54, \"div\", 17)(55, \"label\");\n        i0.ɵɵtext(56, \"About Me\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"textarea\", 27);\n        i0.ɵɵtext(58, \"Oh so, your weak rhyme You doubt I'll bother, reading into it\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(59, \"div\", 0)(60, \"div\", 28)(61, \"button\", 29);\n        i0.ɵɵtext(62, \"Update Profile\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n    },\n    encapsulation: 2\n  });\n  return UserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}