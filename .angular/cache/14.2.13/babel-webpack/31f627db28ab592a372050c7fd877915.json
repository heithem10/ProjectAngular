{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { UserServiceService } from 'app/services/user-service.service';\nimport { ToastrService } from 'ngx-toastr'; // Import if using Toastr for notifications\n\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/services/user-service.service\";\nimport * as i3 from \"ngx-toastr\";\nexport let UserComponent = /*#__PURE__*/(() => {\n  class UserComponent {\n    constructor(fb, userService, toastr) {\n      this.fb = fb;\n      this.userService = userService;\n      this.toastr = toastr;\n      this.profileForm = this.fb.group({\n        username: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        address: [''],\n        aboutMe: ['']\n      });\n    }\n\n    ngOnInit() {\n      this.getLoggedInUserProfile();\n    } // Fetch currently logged-in user's profile data\n\n\n    getLoggedInUserProfile() {\n      this.userService.getLoggedInUser().subscribe(response => {\n        this.loggedInUser = response.user; // Ensure response structure matches\n\n        this.populateForm();\n      }, error => {\n        console.error('Error fetching user data:', error); // Handle errors (display message, redirect, etc.)\n      });\n    } // Populate form with logged-in user's data\n\n\n    populateForm() {\n      this.profileForm.patchValue({\n        username: this.loggedInUser.username,\n        firstName: this.loggedInUser.firstName,\n        lastName: this.loggedInUser.lastName,\n        email: this.loggedInUser.email,\n        address: this.loggedInUser.address || '',\n        aboutMe: this.loggedInUser.aboutMe || ''\n      });\n    } // Update user profile\n\n\n    updateProfile() {\n      if (this.profileForm.valid) {\n        const updatedData = this.profileForm.value;\n        this.userService.updateUserById(this.loggedInUser._id, updatedData).subscribe(response => {\n          this.toastr.success('Profile updated successfully'); // Optionally update user data in view if necessary\n        }, error => {\n          console.error('Error updating user data:', error);\n          this.toastr.error('Failed to update profile'); // Handle errors (display message, redirect, etc.)\n        });\n      } else {\n        this.toastr.warning('Please fill all required fields');\n      }\n    }\n\n  }\n\n  UserComponent.ɵfac = function UserComponent_Factory(t) {\n    return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserServiceService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n\n  UserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserComponent,\n    selectors: [[\"user-cmp\"]],\n    decls: 47,\n    vars: 1,\n    consts: [[1, \"row\"], [1, \"col-md-4\"], [1, \"col-md-8\"], [1, \"card\", \"card-user\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-md-6\", \"px-1\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\"], [1, \"col-md-6\", \"pl-1\"], [\"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"col-md-6\", \"pr-1\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\"], [1, \"col-md-12\"], [\"type\", \"text\", \"formControlName\", \"address\", 1, \"form-control\"], [\"formControlName\", \"aboutMe\", 1, \"form-control\"], [1, \"update\", \"ml-auto\", \"mr-auto\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-round\"]],\n    template: function UserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"Edit Profile\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function UserComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.updateProfile();\n        });\n        i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 8)(11, \"div\", 9)(12, \"label\");\n        i0.ɵɵtext(13, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 11)(16, \"div\", 9)(17, \"label\");\n        i0.ɵɵtext(18, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 0)(21, \"div\", 13)(22, \"div\", 9)(23, \"label\");\n        i0.ɵɵtext(24, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 11)(27, \"div\", 9)(28, \"label\");\n        i0.ɵɵtext(29, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"div\", 0)(32, \"div\", 16)(33, \"div\", 9)(34, \"label\");\n        i0.ɵɵtext(35, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"div\", 0)(38, \"div\", 16)(39, \"div\", 9)(40, \"label\");\n        i0.ɵɵtext(41, \"About Me\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"textarea\", 18);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"div\", 0)(44, \"div\", 19)(45, \"button\", 20);\n        i0.ɵɵtext(46, \"Update Profile\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n  return UserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}