{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserServiceService } from 'app/services/user-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"app/services/user-service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction ResetPasswordComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Password is required and must be at least 6 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(route, userService) {\n      this.route = route;\n      this.userService = userService;\n      this.resetPasswordForm = new FormGroup({\n        password: new FormControl('', [Validators.required, Validators.minLength(6)])\n      });\n    }\n\n    ngOnInit() {\n      this.token = this.route.snapshot.paramMap.get('token');\n    }\n\n    onSubmit() {\n      if (this.resetPasswordForm.invalid) {\n        return;\n      }\n\n      const password = this.resetPasswordForm.value.password;\n      this.userService.resetPassword(this.token, password).subscribe(response => {\n        console.log('Password reset successful', response);\n      }, error => {\n        console.error('Error resetting password', error);\n      });\n    }\n\n  }\n\n  ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n    return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UserServiceService));\n  };\n\n  ResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetPasswordComponent,\n    selectors: [[\"app-reset-password\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-md-8\", \"offset-md-2\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter new password\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"text-danger\"]],\n    template: function ResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5, \"Reset Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"New Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵtemplate(12, ResetPasswordComponent_div_12_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 11);\n        i0.ɵɵtext(14, \"Reset Password\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.resetPasswordForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.resetPasswordForm.get(\"password\").invalid && (ctx.resetPasswordForm.get(\"password\").dirty || ctx.resetPasswordForm.get(\"password\").touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.resetPasswordForm.invalid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap \\\"use strict\\\";})()[_ngcontent-%COMP%] ;{%BLOCK%}\"]\n  });\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}