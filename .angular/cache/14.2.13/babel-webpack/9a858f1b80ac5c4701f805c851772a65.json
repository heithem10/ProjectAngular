{"ast":null,"code":"import { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-cookie-service\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router, cookieService) {\n      this.router = router;\n      this.cookieService = cookieService;\n      this.role = null;\n      this.tokenKey = 'token';\n    }\n\n    setToken(token) {\n      this.cookieService.set(this.tokenKey, token);\n    }\n\n    getToken() {\n      return this.cookieService.get(this.tokenKey);\n    }\n\n    setRole(role) {\n      this.role = role;\n    }\n\n    getRole() {\n      if (!this.role) {\n        const token = this.getToken();\n\n        if (token) {\n          const payload = JSON.parse(atob(token.split('.')[1]));\n          this.role = payload.role;\n        }\n      }\n\n      return this.role;\n    }\n\n    isAuthenticated() {\n      const token = this.getToken();\n\n      if (token) {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        const isExpired = Date.now() >= payload.exp * 1000;\n        return !isExpired;\n      }\n\n      return false;\n    }\n\n    logout() {\n      this.cookieService.delete(this.tokenKey);\n      this.role = null;\n      this.router.navigate(['/login']);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.CookieService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}